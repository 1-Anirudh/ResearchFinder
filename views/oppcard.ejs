<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Opportunities</title>
    <style>

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');

        .hidden {
            display: none;
        }

        .containers {
        display: flex;  /* Set to flex for side by side layout */
        justify-content: space-between;  /* Add space between the containers */
        flex-wrap: wrap; /* Optional: wrap containers to new lines if space is limited */
        gap: 20px; /* Optional: Add gap between containers */
        position: relative;
        margin-top: 110px;
        padding: 10px;
        background: var(--light);
    }

    .container {
      position: relative;
      margin: auto;
      overflow: hidden;
      width: 290px;
      height: 350px;
      background: var(--white);
      box-shadow: 7px 9px 16px 0px #847fb6;
      border-radius: 10px;
    }

    .container:hover {
      transform: translateY(-5px);
      transition: all 0.4s ease-in-out;
      cursor: pointer;
    }

    .product-p {
      font-size: 0.6em;
      color: var(--rose);
      letter-spacing: 1px;
      margin-top: 9.6px;
      margin-bottom: 9.6px;
    }

    .product-pl {
      font-size: 1em;
      color: var(--tan);
      letter-spacing: 1px;
    }

    .product-p2 {
      font-size: 0.7em;
      color: var(--dark);
      letter-spacing: 1px;
    }


    .product-h1 {
      font-size: 1.2em;
      color: var(--dark);
      margin-top: -5px;
      margin-bottom: 12.86px;
    }

    .product-h2 {
      color: var(--tan);
      margin-top: -5px;
        margin-bottom: 19.92px;
    }

    .product {
      position: absolute;
      width: 92%;
      height: 90%;
      top: 7%;
      left: 4%;
      right: 4%;
      margin: auto;
    }

    .product-desc {
      text-transform: none;
      letter-spacing: 0;
      margin-top: 11.2px;
      margin-bottom: 17px;
      color: var(--dark);
      font-size: .7em;
      line-height: 1.6em;
      margin-right: 10px;
      text-align: justify;
    }

    .product-buttons {
      margin-top: 3px;
      position: absolute;
      bottom: 3%;
      left: 5%;
      width: 97%;
    }

      .popup-container {
        position: fixed;
        top: 26%;
        left: 34%;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
      }

      .product-selected {
          background: var(--white);
          box-shadow: 0px 0px 20px 13px #847fb6;
          border-radius: 10px;
          padding: 20px;
          width: 500px;
          height: auto;
      }

    

    .product-button-add, .product-button-like {
      /* background: darken(var(--light), 10%); */
      background-color: #CDA9AC;
      padding: 10px;
      display: inline-block;
      outline: 0;
      border: 0;
      /* margin: -1px; */
      border-radius: 2px;
      text-transform: uppercase;
      letter-spacing: 1px;
      color: var(--white);
      cursor: pointer;
    }

    .product-button-add:hover, .product-button-like:hover {
      background: var(--rose);
      transition: all .4s ease-in-out;
    }

    .product-button-add {
      width: 67%;
    }

    .product-button-like {
      width: 22%;
    }
  

    .pagination ul{
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  background: #fff;
  padding: 8px;
  border-radius: 50px;
  box-shadow: 0px 10px 15px rgba(0,0,0,0.1);
}
.pagination ul li{
  color: #20B2AA;
  list-style: none;
  line-height: 45px;
  text-align: center;
  font-size: 18px;
  font-weight: 500;
  cursor: pointer;
  user-select: none;
  transition: all 0.3s ease;
}
.pagination ul li.numb{
  list-style: none;
  height: 45px;
  width: 45px;
  margin: 0 3px;
  line-height: 45px;
  border-radius: 50%;
}
.pagination ul li.numb.first{
  margin: 0px 3px 0 -5px;
}
.pagination ul li.numb.last{
  margin: 0px -5px 0 3px;
}
.pagination ul li.dots{
  font-size: 22px;
  cursor: default;
}
.pagination ul li.btn{
  padding: 0 20px;
  border-radius: 50px;
}
.pagination li.active,
.pagination ul li.numb:hover,
.pagination ul li:first-child:hover,
.pagination ul li:last-child:hover{
  color: #fff;
  background: #20B2AA;
}

    </style>
</head>
<body>
    <input type="text" id="searchInput" onkeydown="handleSearchEnter(event)" placeholder="Search opportunities...">
    <div class="containers" id="opportunitiesContainer">
        <!-- Your opportunity divs will be here -->
    </div>
    <div class="pagination" id="paginationControls">
        <!-- Pagination buttons will be here -->
        <ul> <!--pages or li are comes from javascript --> </ul>
    </div>

    <!-- Popup container -->
    <div class="popup-container" style="display: none;"></div>

    <script>



        let currentPage = 1;
        window.opportunityData = JSON.parse('<%- opportunityData %>');
        const itemsPerPage = 7; // Number of items to display per page


        function createPagination(page, opportunites) {
            const paginationControls = document.querySelector(".pagination ul");
            paginationControls.innerHTML = ''; // Clear existing pagination controls

            let totalPages = Math.ceil(Object.keys(opportunites).length / itemsPerPage);
            let beforePage = page - 1;
            let afterPage = page + 1;
        
            if (page > 1) {
                const prevButton = document.createElement('li');
                prevButton.classList.add('btn', 'prev');
                prevButton.innerHTML = '<span><i class="fas fa-angle-left"></i> Prev</span>';
                prevButton.addEventListener('click', function() {
                    createPagination(page - 1, opportunites);
                    loadOpportunities(opportunites, page - 1);
                });
                paginationControls.appendChild(prevButton);
            }
        
            if (page > 2) {
                const firstPageButton = document.createElement('li');
                firstPageButton.classList.add('numb');
                firstPageButton.innerHTML = '<span>1</span>';
                firstPageButton.addEventListener('click', function() {
                    createPagination(1, opportunites);
                    loadOpportunities(opportunites, 1);
                });
                paginationControls.appendChild(firstPageButton);
        
                if (page > 3) {
                    const dots = document.createElement('li');
                    dots.classList.add('dots');
                    dots.innerHTML = '<span>...</span>';
                    paginationControls.appendChild(dots);
                }
            }
        
            if (page === totalPages) {
                beforePage = page - 1;
            }
        
            if (page === 1) {
                afterPage = page + 1;
            }
        
            for (let plength = beforePage; plength <= afterPage; plength++) {
                if (plength > totalPages) {
                    continue;
                }
                if (plength === 0) {
                    plength = plength + 1;
                }
                const pageButton = document.createElement('li');
                pageButton.classList.add('numb');
                if (page === plength) {
                    pageButton.classList.add('active');
                }
                pageButton.innerHTML = `<span>${plength}</span>`;
                pageButton.addEventListener('click', function() {
                    createPagination(plength, opportunites);
                    loadOpportunities(opportunites, plength);
                });
                paginationControls.appendChild(pageButton);
            }
        
            if (page < totalPages - 1) {
                if (page < totalPages - 2) {
                    const dots = document.createElement('li');
                    dots.classList.add('dots');
                    dots.innerHTML = '<span>...</span>';
                    paginationControls.appendChild(dots);
                }
                const lastPageButton = document.createElement('li');
                lastPageButton.classList.add('numb');
                lastPageButton.innerHTML = `<span>${totalPages}</span>`;
                lastPageButton.addEventListener('click', function() {
                    createPagination(totalPages, opportunites);
                    loadOpportunities(opportunites, totalPages);
                });
                paginationControls.appendChild(lastPageButton);
            }
        
            if (page < totalPages) {
                const nextButton = document.createElement('li');
                nextButton.classList.add('btn', 'next');
                nextButton.innerHTML = '<span>Next <i class="fas fa-angle-right"></i></span>';
                nextButton.addEventListener('click', function() {
                    createPagination(page + 1, opportunites);
                    loadOpportunities(opportunites, page + 1);
                });
                paginationControls.appendChild(nextButton);
            }
        }

        // createPagination(currentPage, window.opportunityData);


        async function handleSearchEnter(event) {
            if (event.key === 'Enter') {
                searchOpportunities();
            }
        }

        async function searchOpportunities() {
            const searchInput = document.getElementById('searchInput');
            const searchValue = searchInput.value.toLowerCase();
            if (!searchValue) {
                return;
            }

            // Update the URL with the search query
            const newUrl = `${window.location.origin}${window.location.pathname}?s=${encodeURIComponent(searchValue)}`;
            history.pushState({ path: newUrl }, '', newUrl);

            const filteredOpportunities = Object.keys(window.opportunityData).reduce((acc, key) => {
                const opportunity = window.opportunityData[key];
                if (opportunity.title.toLowerCase().includes(searchValue) || 
                    opportunity.topic.toLowerCase().includes(searchValue) || 
                    opportunity.location.toLowerCase().includes(searchValue) || 
                    opportunity.institution.toLowerCase().includes(searchValue)) {
                    acc[key] = opportunity;
                }
                return acc;
            }, {});
            window.filteredOpportunities = filteredOpportunities;

            loadOpportunities(filteredOpportunities, currentPage);
            createPagination(currentPage, filteredOpportunities);
        }

        function loadOpportunities(opportunities, page) {
            const container = document.getElementById('opportunitiesContainer');
            container.innerHTML = ''; // Clear existing opportunities

            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            const paginatedOpportunities = Object.keys(opportunities).slice(start, end);

            paginatedOpportunities.forEach(key => {
                const opportunity = opportunities[key];
                let div = document.createElement('div');
                div.classList.add('container');
                div.setAttribute('Opportunity-ID', key);
                div.innerHTML = `
                  <div class="product">
                    <p class="product-p" name="topic">${opportunity.topic}</p>
                    <h2 class="product-h1" name="title">${opportunity.title}</h2>
                    <p class="product-pl" name="location">${opportunity.location}</p>
                    <p class="product-desc" name="shortDescription">${opportunity.shortDescription}</p>
                    <p class="product-p2" name="stipend">stipend: ${opportunity.stipend} </p>
                    <p class="product-p2" name="duration">duration: ${opportunity.duration} </p>
                    <div class="product-buttons">
                      <button class="product-button-add" type="button">Apply Now</button>
                      <button class="product-button-like" type="button"><span>♥</span></button>
                    </div>
                  </div>
                `;
                container.appendChild(div);
            });

            // Reattach event listeners to the new elements
            attachEventListeners();
        }

        function attachEventListeners() {
            const containers = document.querySelectorAll('.container');
            const popupContainer = document.querySelector('.popup-container');

            containers.forEach(container => {
                container.addEventListener('click', function(e) {
                    e.stopPropagation(); // Prevent the click from propagating to the window
                    const opportunityId = this.getAttribute('Opportunity-ID');
                    const opportunity = window.opportunityData[opportunityId];
                    console.log('opportunityId', opportunityId);

                    let popup = document.createElement('div');
                    popup.classList.add('product-selected');
                    popup.innerHTML = `
                        <p class="product-p" name="topic">${opportunity.topic}</p>
                        <h2 class="product-h1" name="title">${opportunity.title}</h2>
                        <p class="product-pl" name="location">${opportunity.location}</p>
                        <p class="product-pl" name="institution">${opportunity.institution}</p>
                        <p class="product-desc" name="longDescription">${opportunity.longDescription}</p>
                        <p class="product-p2" name="stipend">reference: ${opportunity.postBy} </p>
                        <p class="product-p2" name="stipend">stipend: ${opportunity.stipend} </p>
                        <p class="product-p2" name="duration">duration: ${opportunity.duration} </p>
                        <div class="product-buttons">
                            <button class="product-button-add" type="button">Apply Now</button>
                            <button class="product-button-like" type="button"><span>♥</span></button>
                        </div>
                    `;
                    popupContainer.innerHTML = ''; // Clear any existing content
                    popupContainer.appendChild(popup);
                    popupContainer.style.display = 'flex'; // Show the popup container

                    const popupHeight = popup.offsetHeight + 100; // Add 100px to the natural height
                    popup.style.height = `${popupHeight}px`;
                });
            });

            window.addEventListener('click', function() {
                popupContainer.style.display = 'none'; // Hide the popup container
                popupContainer.innerHTML = ''; // Clear the popup content
            });

            popupContainer.addEventListener('click', function(e) {
                e.stopPropagation(); // Prevent the click from propagating to the window
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Push the initial state to the history stack if it's empty
            if (!history.state) {
                const initialUrl = `${window.location.origin}${window.location.pathname}`;
                history.replaceState({ path: initialUrl }, '', initialUrl);
            }

            attachEventListeners();

            const searchParams = new URLSearchParams(window.location.search);
            const searchValue = searchParams.get('s');
            if (searchValue) {
                document.getElementById('searchInput').value = searchValue;
                searchOpportunities();
            } else {
                loadOpportunities(window.opportunityData, currentPage);
                createPagination(currentPage, window.opportunityData);
            }
        });

        window.addEventListener('popstate', function(event) {
            const searchParams = new URLSearchParams(window.location.search);
            const searchValue = searchParams.get('s');
            if (searchValue) {
                document.getElementById('searchInput').value = searchValue;
                searchOpportunities(false);
            } else {
                document.getElementById('searchInput').value = '';
                loadOpportunities(window.opportunityData, currentPage);
                createPagination(currentPage, window.opportunityData);
            }
        });
    </script>
</body>
</html>