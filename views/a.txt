user1 : 1WyzbOAYuoZY8ZenBSzycq2IA2X2
user2 : eJaqZbU2T3hz2qK65bWbbrBoa8U2


wss.on('connection', (ws, req) => {
    // Extract user ID from query parameters or headers
    const userId = req.url.split('?userId=')[1];
    console.log('userID', userId);

    if (userId) {
        userConnections.set(userId, ws);
        console.log(`User ${userId} connected`);

        ws.on('message', (message) => {
            console.log(`Received message from ${userId} => ${message}`);
            const parsedMessage = JSON.parse(message);
            const targetUserId = parsedMessage.targetUserId;
            const targetWs = userConnections.get(targetUserId);

            if (targetWs && targetWs.readyState === WebSocket.OPEN) {
                targetWs.send(JSON.stringify({
                    from: userId,
                    message: parsedMessage.message,
                    timestamp: parsedMessage.timestamp
                }));
            }
        });

        ws.on('close', () => {
            userConnections.delete(userId);
            console.log(`User ${userId} disconnected`);
        });
    } else {
        ws.close();
        console.log('Connection closed due to missing user ID');
    }
});

try {
      fetch('/open-zoom')
                .then(response => response.json())
                .then(data => {
                    const zoomUrl = data.url;
                    window.open(zoomUrl, '_blank');
                })
                .catch(error => console.error('Error:', error));
    } catch (error) {
        console.error('Error sending Message:', error);
    }