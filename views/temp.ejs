<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Accessible Web App with Node.js</title>
</head>
<body>
  <main role="main">
    <h1>Welcome to Our Accessible Web App</h1>
    <p id="content">Hello world !!</p>
    <button id="readContentButton">Read Screen Content</button>
    <button id="startVoiceNav">Start Voice Navigation</button>
    <button id="stopVoiceNav">Stop Voice Navigation</button>
  </main>
  <script>
    // Select the button and the content area
    const readContentButton = document.getElementById('readContentButton');
    const contentToRead = document.getElementById('content'); // The div or section you want to read

    // Function to read text
    function readText(text) {
        const speech = new SpeechSynthesisUtterance(text);
        speech.pitch = 1;    // Adjust pitch if needed
        speech.rate = 1;     // Adjust rate if needed
        window.speechSynthesis.speak(speech);
    }

    // Add an event listener to trigger reading
    readContentButton.addEventListener('click', () => {
        readText(contentToRead.innerText);
    });



    // Check for browser support
    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;

    if (SpeechRecognition) {
        const recognition = new SpeechRecognition();
        recognition.continuous = true; // Keeps listening even after user pauses
        recognition.lang = 'en-US'; // Set language
        recognition.interimResults = false; // Only finalize results
        recognition.maxAlternatives = 1; // Only one recognition result

        // Start listening when the page loads or on a button click
        document.getElementById('startVoiceNav').addEventListener('click', () => {
            recognition.start();
            console.log("Voice navigation started");
        });

        // Stop listening on a button click
        document.getElementById('stopVoiceNav').addEventListener('click', () => {
            recognition.stop();
            console.log("Voice navigation stopped");
        });

        // Listen for recognized speech and handle commands
        recognition.onresult = (event) => {
            const command = event.results[event.results.length - 1][0].transcript.trim().toLowerCase();
            console.log("Heard command:", command);

            // Map commands to navigation functions
            if (command.includes('go to home')) {
                navigateToHome();
            } else if (command.includes('open settings')) {
                openSettings();
            } else if (command.includes('read content')) {
                readText(document.getElementById('content').innerText);
            }
            // Add more commands as needed
        };

        recognition.onerror = (event) => {
            console.error("Speech recognition error:", event.error);
        };

        recognition.onend = () => {
            console.log("Voice navigation stopped");
            // Restart if you want continuous listening
            recognition.start();
        };

    } else {
        alert("Sorry, your browser doesn't support voice navigation.");
    }

    // Sample functions for navigation
    function navigateToHome() {
        console.log("going to home");
    }

    function openSettings() {
        console.log("opening settings");
    }


  </script>
</body>
</html>
